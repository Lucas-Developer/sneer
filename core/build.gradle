version = "0.1.5"

apply plugin: "clojure"
apply plugin: "java"
apply plugin: "maven"

sourceCompatibility = 1.6
targetCompatibility = 1.6

buildscript {
  repositories {
    maven { url "https://clojars.org/repo" }
  }

  dependencies {
    classpath "clojuresque:clojuresque:1.7.0"
  }
}

repositories {
  maven { url "https://clojars.org/repo" }
}

buildscript {
  repositories {
    maven { url 'https://repo.spring.io/plugins-release' }
  }

  dependencies {
    classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.6'
  }
}

apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-eclipse'

clojure.warnOnReflection = true

sourceSets {
  main {
    clojure {
      aotCompile = true
    }
  }
}

compileClojure.mustRunAfter compileJava

eclipse.project {
  natures 'ccw.nature'
  buildCommand 'ccw.builder'
}

dependencies {
  compile 'org.clojure:clojure:1.7.0-alpha5'
  compile 'org.clojure:core.async:0.1.303.0-886421-alpha'
  compile external['clojure.core.match']
  compile('com.cognitect:transit-clj:0.8.259') {
    exclude group: 'org.msgpack', module: 'msgpack'
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    exclude group: 'org.apache.directory.studio', module: 'org.apache.commons.codec'
  }
  compile project(':crypto')
  compile project(':sneer-java-api')
  testCompile 'midje:midje:1.6.3'
  compile 'org.clojure:java.jdbc:0.3.6'
  optional 'org.xerial:sqlite-jdbc:3.8.6'
}

task leinSkummet(type: Exec) {
  inputs.source sourceSets.main.clojure
  outputs.dir 'target'
  executable 'lein'
  args 'with-profile', 'lean', 'do', 'skummet', 'compile', ',', 'skummet', 'jar'
}

task skummetJar(type: Copy, dependsOn: leinSkummet) {
  from('target') {
    include "core-$version-standalone.jar"
  }
  into "$buildDir/skummet"
  rename { fileName ->
    fileName.replace("-standalone", "")
  }
}

task leinClean(type: Exec) {
  executable 'lein'
  args 'clean'
}

clean.dependsOn leinClean

apply plugin: 'ivy-publish'

def artifacts = file('../artifacts')

publishing {
  repositories {
    ivy { url artifacts }
  }
  publications {
    jar(IvyPublication) {
      artifact(file("$buildDir/skummet/core-${version}.jar")) {
        builtBy skummetJar
      }
    }
  }
}

uploadArchives {
  repositories {
    ivy { url artifacts }
  }
}

